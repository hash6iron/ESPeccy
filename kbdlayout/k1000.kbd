; *********************************************************************************************
; Custom layout for ESPeccy. This layout is designed for Windyoung K1000 PS/2 (USB) keyboard.
; in order to add special ZX Spectrum+ keys as, EDIT, GRAPH, INV and TRUE VIDEO, etc.
;
; This layout could be adapted for others distributions.
;
; Enjoy it!
;
; Made by Juan JosÃ© Ponteprino [SplinterGU]
; based on layout made by Hash6iron (Antonio Tamairon, 2025) for ESPeccy
;
; This custom layout is used to Windyoung K1000 USB/PS2 Keyboard
; to emulate a real Spectrum+ Keyboard.
; This layout has special keys as original like:
; GRAPH, INV VIDEO, TRUE VIDEO, EDIT, EXTEND MODE (see image in /keymap)
; *********************************************************************************************

; Title = Custom K1000 by Hash6iron

; single byte scancodes

0x76                        = KEY_ESCAPE
0x05                        = KEY_F1
0x06                        = KEY_F2
0x04                        = KEY_F3
0x0C                        = KEY_F4
0x03                        = KEY_F5
0x0B                        = KEY_F6
0x83                        = KEY_F7
0x0A                        = KEY_F8
0x01                        = KEY_F9
0x09                        = KEY_F10
0x78                        = KEY_F11
0x07                        = KEY_F12

0x1E                        = KEY_1                               ; 2 -> 1
0x26                        = KEY_2                               ; 3 -> 2
0x25                        = KEY_3                               ; 4 -> 3
0x2E                        = KEY_4                               ; 5 -> 4
0x36                        = KEY_5                               ; 6 -> 5
0x3D                        = KEY_6                               ; 7 -> 6
0x3E                        = KEY_7                               ; 8 -> 7
0x46                        = KEY_8                               ; 9 -> 8
0x45                        = KEY_9                               ; 0 -> 9

0x1D                        = KEY_q                               ; w -> q
0x24                        = KEY_w                               ; e -> w
0x2D                        = KEY_e                               ; r -> e
0x2C                        = KEY_r                               ; t -> r
0x35                        = KEY_t                               ; y -> t
0x3C                        = KEY_y                               ; u -> y
0x43                        = KEY_u                               ; i -> u
0x44                        = KEY_i                               ; o -> i
0x4D                        = KEY_o                               ; p -> o

0x1b                        = KEY_a                               ; s -> a
0x23                        = KEY_s                               ; d -> s
0x2b                        = KEY_d                               ; f -> d
0x34                        = KEY_f                               ; g -> f
0x33                        = KEY_g                               ; h -> g
0x3B                        = KEY_h                               ; j -> h
0x42                        = KEY_j                               ; k -> j
0x4B                        = KEY_k                               ; l -> k

; 0x1A                        = KEY_NONE                            ; z -> Not used
0x22                        = KEY_z                               ; x -> z
0x21                        = KEY_x                               ; c -> x
0x2A                        = KEY_c                               ; v -> c
0x32                        = KEY_v                               ; b -> v
0x31                        = KEY_b                               ; n -> b
0x3A                        = KEY_n                               ; m -> n

0x4E                        = KEY_0                               ; MINUS -> 0 (-)
; 0x55                        = KEY_NONE                            ; EQUALS -> Not used key
0x54                        = KEY_p                               ; [ -> p
0x5B                        = KEY_QUOTE                           ; ] -> "
; 0x5D                        = KEY_NONE                            ; BACKSLASH -> Not used key
0x4C                        = KEY_l                               ; SEMICOLON -> l
0x52                        = KEY_SEMICOLON                       ; QUOTE -> Semicolon (;)
0x41                        = KEY_m                               ; COMMA -> m
0x49                        = KEY_COMMA                           ; PERIOD -> COMMA (,)
0x4A                        = KEY_PERIOD                          ; SLASH -> PERIOD (.)
0x70                        = KEY_KP_INSERT
0x69                        = KEY_KP_END
0x72                        = KEY_KP_DOWN
0x7A                        = KEY_KP_PAGEDOWN
0x6B                        = KEY_KP_LEFT
0x73                        = KEY_KP_CENTER                       ; "5" in the keypad
0x74                        = KEY_KP_RIGHT
0x6C                        = KEY_KP_HOME
0x75                        = KEY_KP_UP
0x7D                        = KEY_KP_PAGEUP
0x71                        = KEY_KP_DELETE
0x7C                        = KEY_KP_MULTIPLY
0x79                        = KEY_KP_PLUS
0x7B                        = KEY_KP_MINUS
0x66                        = KEY_BACKSPACE
0x0D                        = KEY_TAB
0x5A                        = KEY_RETURN
0x77                        = KEY_NUMLOCK
0x7E                        = KEY_SCROLLLOCK
0x58                        = KEY_CAPSLOCK
0x12                        = KEY_LSHIFT
0x59                        = KEY_RSHIFT
0x14                        = KEY_LCTRL
0x11                        = KEY_LALT
0x29                        = KEY_SPACE
0x84                        = KEY_SYSREQ                          ; ALT + PRINTSCREEN directly translated by the keyboard

; Special keys
; scancode = [MODIFIERS] out_key
; where MODIFIERS are:
;   SHIFT
;   LALT
;   RALT
;   CTRL

0x0E                        = SHIFT KEY_3                         ; KEY_HASH      [GRAVEACENT -> TRUE VIDEO Dedicated key (CAP.SHIFT + 3) #]
0x15                        = SHIFT KEY_9                         ; KEY_LEFTPAREN [q          -> GRAPH Dedicated key      (CAP.SHIFT + 9) (]
0x16                        = SHIFT KEY_4                         ; KEY_DOLLAR    [1          -> INV VIDEO Dedicated key  (CAP.SHIFT + 4) $]
0x1C                        = SHIFT KEY_1                         ; KEY_EXCLAIM   [a          -> EDIT Dedicated key       (CAP.SHIFT + 1) !]

; virtual keys generated by other virtual keys combinations
; [MODIFIERS] in_key = out_key

SHIFT KEY_1                 = KEY_EXCLAIM                         ; SHIFT "1" = "!"
SHIFT KEY_2                 = KEY_AT                              ; SHIFT "2" = "@"
SHIFT KEY_3                 = KEY_HASH                            ; SHIFT "3" = "#"
SHIFT KEY_4                 = KEY_DOLLAR                          ; SHIFT "4" = "$"
SHIFT KEY_5                 = KEY_PERCENT                         ; SHIFT "5" = "%"
SHIFT KEY_6                 = KEY_CARET                           ; SHIFT "6" = "^"
SHIFT KEY_7                 = KEY_AMPERSAND                       ; SHIFT "7" = "&"
SHIFT KEY_8                 = KEY_ASTERISK                        ; SHIFT "8" = "*"
SHIFT KEY_9                 = KEY_LEFTPAREN                       ; SHIFT "9" = "("
SHIFT KEY_0                 = KEY_RIGHTPAREN                      ; SHIFT "0" = ")"

SHIFT KEY_GRAVEACCENT       = KEY_TILDE                           ; SHIFT "`" = "~"
SHIFT KEY_MINUS             = KEY_UNDERSCORE                      ; SHIFT "-" = "_"
SHIFT KEY_EQUALS            = KEY_PLUS                            ; SHIFT "=" = "+"
SHIFT KEY_LEFTBRACKET       = KEY_LEFTBRACE                       ; SHIFT "[" = "{"
SHIFT KEY_RIGHTBRACKET      = KEY_RIGHTBRACE                      ; SHIFT "]" = "}"
SHIFT KEY_BACKSLASH         = KEY_VERTICALBAR                     ; SHIFT "\" = "|"
SHIFT KEY_SEMICOLON         = KEY_COLON                           ; SHIFT ";" = ":"
SHIFT KEY_QUOTE             = KEY_QUOTEDBL                        ; SHIFT "'" = """
SHIFT KEY_COMMA             = KEY_LESS                            ; SHIFT "," = "<"
SHIFT KEY_PERIOD            = KEY_GREATER                         ; SHIFT "." = ">"
SHIFT KEY_SLASH             = KEY_QUESTION                        ; SHIFT "/" = "?"

; SHIFT "a".."z" = "A".."Z"
SHIFT KEY_a                 = KEY_A
SHIFT KEY_b                 = KEY_B
SHIFT KEY_c                 = KEY_C
SHIFT KEY_d                 = KEY_D
SHIFT KEY_e                 = KEY_E
SHIFT KEY_f                 = KEY_F
SHIFT KEY_g                 = KEY_G
SHIFT KEY_h                 = KEY_H
SHIFT KEY_i                 = KEY_I
SHIFT KEY_j                 = KEY_J
SHIFT KEY_k                 = KEY_K
SHIFT KEY_l                 = KEY_L
SHIFT KEY_m                 = KEY_M
SHIFT KEY_n                 = KEY_N
SHIFT KEY_o                 = KEY_O
SHIFT KEY_p                 = KEY_P
SHIFT KEY_q                 = KEY_Q
SHIFT KEY_r                 = KEY_R
SHIFT KEY_s                 = KEY_S
SHIFT KEY_t                 = KEY_T
SHIFT KEY_u                 = KEY_U
SHIFT KEY_v                 = KEY_V
SHIFT KEY_w                 = KEY_W
SHIFT KEY_x                 = KEY_X
SHIFT KEY_y                 = KEY_Y
SHIFT KEY_z                 = KEY_Z

; SHIFT "A".."Z" = "a".."z"
SHIFT KEY_A                 = KEY_a
SHIFT KEY_B                 = KEY_b
SHIFT KEY_C                 = KEY_c
SHIFT KEY_D                 = KEY_d
SHIFT KEY_E                 = KEY_e
SHIFT KEY_F                 = KEY_f
SHIFT KEY_G                 = KEY_g
SHIFT KEY_H                 = KEY_h
SHIFT KEY_I                 = KEY_i
SHIFT KEY_J                 = KEY_j
SHIFT KEY_K                 = KEY_k
SHIFT KEY_L                 = KEY_l
SHIFT KEY_M                 = KEY_m
SHIFT KEY_N                 = KEY_n
SHIFT KEY_O                 = KEY_o
SHIFT KEY_P                 = KEY_p
SHIFT KEY_Q                 = KEY_q
SHIFT KEY_R                 = KEY_r
SHIFT KEY_S                 = KEY_s
SHIFT KEY_T                 = KEY_t
SHIFT KEY_U                 = KEY_u
SHIFT KEY_V                 = KEY_v
SHIFT KEY_W                 = KEY_w
SHIFT KEY_X                 = KEY_x
SHIFT KEY_Y                 = KEY_y
SHIFT KEY_Z                 = KEY_z

; extended scancodes (0xE0..)

0xE0 .. 0x14                = KEY_RCTRL
0xE0 .. 0x11                = KEY_RALT
0xE0 .. 0x1F                = KEY_LGUI
0xE0 .. 0x27                = KEY_RGUI
0xE0 .. 0x2F                = KEY_APPLICATION
0xE0 .. 0x70                = KEY_INSERT
0xE0 .. 0x71                = KEY_F2                              ; DELETE (SUPR) -> BIOS (F2)
0xE0 .. 0x4A                = KEY_KP_DIVIDE
0xE0 .. 0x5A                = KEY_KP_ENTER
0xE0 .. 0x7D                = KEY_PAGEUP
0xE0 .. 0x7A                = KEY_PAGEDOWN
0xE0 .. 0x6C                = KEY_HOME
0xE0 .. 0x69                = KEY_END
0xE0 .. 0x75                = KEY_UP
0xE0 .. 0x72                = KEY_DOWN
0xE0 .. 0x6B                = KEY_LEFT
0xE0 .. 0x74                = KEY_RIGHT
0xE0 .. 0x7C                = KEY_PRINTSCREEN

; note1: pressing CTRL + PAUSE will generate "E0 7E" instead of normal Pause sequence. Here is translated to VK_BREAK.
; note2: pressing CTRL + PAUSE generates both keydown and keyup at the same time (hence the sequence E0 7E E0 F0 7E)
0xE0 .. 0x7E                      = KEY_BREAK

; Add volume up, down and mute keys
0xE0 .. 0x32                = KEY_VOLUMEUP
0xE0 .. 0x21                = KEY_VOLUMEDOWN
0xE0 .. 0x23                = KEY_VOLUMEMUTE

; these codes are discarded. They are a sort of extended left and right shifts.
; They are prefixed/postfixed on some special keys (insert, cursor,...) in combination with SHIFT or NUM LOCK, and even in unshifted PRINTSCREEN
; 0xE0 .. 0x12                = KEY_NONE
; 0xE0 .. 0x59                = KEY_NONE


; extended joy scancodes (0xE2..)

0xE2 .. 0x40                = KEY_JOY1LEFT
0xE2 .. 0x41                = KEY_JOY1RIGHT
0xE2 .. 0x42                = KEY_JOY1UP
0xE2 .. 0x43                = KEY_JOY1DOWN
0xE2 .. 0x44                = KEY_JOY1START
0xE2 .. 0x45                = KEY_JOY1MODE
0xE2 .. 0x46                = KEY_JOY1A
0xE2 .. 0x47                = KEY_JOY1B
0xE2 .. 0x48                = KEY_JOY1C
0xE2 .. 0x49                = KEY_JOY1X
0xE2 .. 0x4A                = KEY_JOY1Y
0xE2 .. 0x4B                = KEY_JOY1Z
0xE2 .. 0x4C                = KEY_JOY2LEFT
0xE2 .. 0x4D                = KEY_JOY2RIGHT
0xE2 .. 0x4E                = KEY_JOY2UP
0xE2 .. 0x4F                = KEY_JOY2DOWN
0xE2 .. 0x50                = KEY_JOY2START
0xE2 .. 0x51                = KEY_JOY2MODE
0xE2 .. 0x52                = KEY_JOY2A
0xE2 .. 0x53                = KEY_JOY2B
0xE2 .. 0x54                = KEY_JOY2C
0xE2 .. 0x55                = KEY_JOY2X
0xE2 .. 0x56                = KEY_JOY2Y
0xE2 .. 0x57                = KEY_JOY2Z
