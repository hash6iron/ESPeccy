  // *********************************************************************************************
  // 
  // Custom layout for ESPeccy. This layout is designed for Windyoung K1000 PS/2 (USB) keyboard.
  // in order to add special ZX Spectrum+ keys as, EDIT, GRAPH, INV and TRUE VIDEO, etc.
  //
  // How to use?
  //   1. Put this file in the root of SD card
  //   2. Set CUSTOM LAYOUT in BIOS MENU
  //   3. Save BIOS configuration.
  //
  //   This layout could be adapted for others distributions.
  //
  // Enjoy it!
  //
  //
  // By Hash6iron (Antonio Tamairon, 2025) for ESPeccy
  // 
  // This custom layout is used to Windyoung K1000 USB/PS2 Keyboard 
  // to emulate a real Spectrum+ Keyboard. 
  // This layout has special keys as original like:
  // GRAPH, INV VIDEO, TRUE VIDEO, EDIT, EXTEND MODE (see image in /keymap)
  // *********************************************************************************************
  
  
  
  // name
  name : custom

  // description
  desc : custom K1000 by Hash6iron

  // single byte scancodes
  // --------------------------------------------------------------------------------------------
  //
  // NOTE: {original VK_ scancode -> New VK_ for custom layout}
  //
  base=
  {
    0x76, VK_ESCAPE
    0x05, VK_F1
    0x06, VK_F2
    0x04, VK_F3
    0x0C, VK_F4
    0x03, VK_F5
    0x0B, VK_F6
    0x83, VK_F7
    0x0A, VK_F8
    0x01, VK_F9
    0x09, VK_F10
    0x78, VK_F11
    0x07, VK_F12

    // 0x16, VK_DOLLAR                      // 1 -> INV VIDEO Dedicated key (CAP.SHIFT + 4) ($)
    0x1E, VK_1                              // 2 -> 1
    0x26, VK_2                              // 3 -> 2
    0x25, VK_3                              // 4 -> 3
    0x2E, VK_4                              // 5 -> 4
    0x36, VK_5                              // 6 -> 5
    0x3D, VK_6                              // 7 -> 6
    0x3E, VK_7                              // 8 -> 7
    0x46, VK_8                              // 9 -> 8
    0x45, VK_9                              // 0 -> 9

    //0x15, VK_LEFTPAREN                      // q -> GRAPH Dedicated key (CAP.SHIFT + 9)( ( )
    0x1D, VK_q                              // w -> q
    0x24, VK_w                              // e -> w
    0x2D, VK_e                              // r -> e
    0x2C, VK_r                              // t -> r
    0x35, VK_t                              // y -> t
    0x3C, VK_y                              // u -> y
    0x43, VK_u                              // i -> u
    0x44, VK_i                              // o -> i
    0x4D, VK_o                              // p -> o

    /*0x1C, VK_EXCLAIM*/                        // a -> EDIT Dedicated key (CAP.SHIFT + 1)(!)
    0x1b, VK_a                              // s -> a
    0x23, VK_s                              // d -> s
    0x2b, VK_d                              // f -> d
    0x34, VK_f                              // g -> f
    0x33, VK_g                              // h -> g
    0x3B, VK_h                              // j -> h
    0x42, VK_j                              // k -> j
    0x4B, VK_k                              // l -> k

    0x1A, VK_NONE                           // z -> Not used
    0x22, VK_z                              // x -> z
    0x21, VK_x                              // c -> x
    0x2A, VK_c                              // v -> c
    0x32, VK_v                              // b -> v
    0x31, VK_b                              // n -> b
    0x3A, VK_n                              // m -> n

    // 0x0E, VK_HASH                           // GRAVEACENT -> TRUE VIDEO Dedicated key (CAP.SHIFT + 3) (#)
    0x4E, VK_0                              // MINUS -> 0 (-)
    0x55, VK_NONE                           // EQUALS -> Not used key
    0x54, VK_p                              // [ -> p
    0x5B, VK_QUOTE                          // ] -> "
    0x5D, VK_NONE                           // BACKSLASH -> Not used key
    0x4C, VK_l                              // SEMICOLON -> l
    0x52, VK_SEMICOLON                      // QUOTE -> Semicolon (;)
    0x41, VK_m                              // COMMA -> m
    0x49, VK_COMMA                          // PERIOD -> COMMA (,)
    0x4A, VK_PERIOD                         // SLASH -> PERIOD (.)
    0x70, VK_KP_INSERT
    0x69, VK_KP_END
    0x72, VK_KP_DOWN
    0x7A, VK_KP_PAGEDOWN
    0x6B, VK_KP_LEFT
    0x73, VK_KP_CENTER                      // "5" in the keypad
    0x74, VK_KP_RIGHT
    0x6C, VK_KP_HOME
    0x75, VK_KP_UP
    0x7D, VK_KP_PAGEUP
    0x71, VK_KP_DELETE
    0x7C, VK_KP_MULTIPLY
    0x79, VK_KP_PLUS
    0x7B, VK_KP_MINUS
    0x66, VK_BACKSPACE
    0x0D, VK_TAB
    0x5A, VK_RETURN
    0x77, VK_NUMLOCK
    0x7E, VK_SCROLLLOCK
    0x58, VK_CAPSLOCK
    0x12, VK_LSHIFT
    0x59, VK_RSHIFT
    0x14, VK_LCTRL
    0x11, VK_LALT
    0x29, VK_SPACE
    0x84, VK_SYSREQ  // ALT + PRINTSCREEN directly translated by the keyboard
  }

  // extended scancodes (0xE0..)
  extend=
  {
    0x14, VK_RCTRL
    0x11, VK_RALT
    0x1F, VK_LGUI
    0x27, VK_RGUI
    0x2F, VK_APPLICATION
    0x70, VK_INSERT
    0x71, VK_F2                                  // DELETE (SUPR) -> BIOS (F2)
    0x4A, VK_KP_DIVIDE
    0x5A, VK_KP_ENTER
    0x7D, VK_PAGEUP
    0x7A, VK_PAGEDOWN
    0x6C, VK_HOME
    0x69, VK_END
    0x75, VK_UP
    0x72, VK_DOWN
    0x6B, VK_LEFT
    0x74, VK_RIGHT
    0x7C, VK_PRINTSCREEN
    // note1: pressing CTRL + PAUSE will generate "E0 7E" instead of normal Pause sequence. Here is translated to VK_BREAK.
    // note2: pressing CTRL + PAUSE generates both keydown and keyup at the same time (hence the sequence E0 7E E0 F0 7E)
    0x7E, VK_BREAK
        // Add volume up, down and mute keys
    0x32, VK_VOLUMEUP
    0x21, VK_VOLUMEDOWN
    0x23, VK_VOLUMEMUTE
    // these codes are discarded. They are a sort of extended left and right shifts.
    // They are prefixed/postfixed on some special keys (insert, cursor,...) in combination with SHIFT or NUM LOCK, and even in unshifted PRINTSCREEN
    0x12, VK_NONE
    0x59, VK_NONE
  } 

  // virtual keys generated by other virtual keys combinations
  //  in_key, { CTRL, LALT, RALT, SHIFT }, out_key
  virtual=
  {
    VK_1,            { 0, 0, 0, 1 }, VK_EXCLAIM      // SHIFT "1" = "!"
    VK_2,            { 0, 0, 0, 1 }, VK_AT           // SHIFT "2" = "@"
    VK_3,            { 0, 0, 0, 1 }, VK_HASH         // SHIFT "3" = "#"
    VK_4,            { 0, 0, 0, 1 }, VK_DOLLAR       // SHIFT "4" = "$"
    VK_5,            { 0, 0, 0, 1 }, VK_PERCENT      // SHIFT "5" = "%"
    VK_6,            { 0, 0, 0, 1 }, VK_CARET        // SHIFT "6" = "^"
    VK_7,            { 0, 0, 0, 1 }, VK_AMPERSAND    // SHIFT "7" = "&"
    VK_8,            { 0, 0, 0, 1 }, VK_ASTERISK     // SHIFT "8" = "*"
    VK_9,            { 0, 0, 0, 1 }, VK_LEFTPAREN    // SHIFT "9" = "("
    VK_0,            { 0, 0, 0, 1 }, VK_RIGHTPAREN   // SHIFT "0" = ")"

    VK_GRAVEACCENT,  { 0, 0, 0, 1 }, VK_TILDE        // SHIFT "`" = "~"
    VK_MINUS,        { 0, 0, 0, 1 }, VK_UNDERSCORE   // SHIFT "-" = "_"
    VK_EQUALS,       { 0, 0, 0, 1 }, VK_PLUS         // SHIFT "=" = "+"
    VK_LEFTBRACKET,  { 0, 0, 0, 1 }, VK_LEFTBRACE    // SHIFT "[" = "{"
    VK_RIGHTBRACKET, { 0, 0, 0, 1 }, VK_RIGHTBRACE   // SHIFT "]" = "}"
    VK_BACKSLASH,    { 0, 0, 0, 1 }, VK_VERTICALBAR  // SHIFT "\" = "|"
    VK_SEMICOLON,    { 0, 0, 0, 1 }, VK_COLON        // SHIFT ";" = ":"
    VK_QUOTE,        { 0, 0, 0, 1 }, VK_QUOTEDBL     // SHIFT "'" = """
    VK_COMMA,        { 0, 0, 0, 1 }, VK_LESS         // SHIFT "," = "<"
    VK_PERIOD,       { 0, 0, 0, 1 }, VK_GREATER      // SHIFT "." = ">"
    VK_SLASH,        { 0, 0, 0, 1 }, VK_QUESTION     // SHIFT "/" = "?"

    // SHIFT "a".."z" = "A".."Z"
    VK_a,            { 0, 0, 0, 1 }, VK_A
    VK_b,            { 0, 0, 0, 1 }, VK_B
    VK_c,            { 0, 0, 0, 1 }, VK_C
    VK_d,            { 0, 0, 0, 1 }, VK_D
    VK_e,            { 0, 0, 0, 1 }, VK_E
    VK_f,            { 0, 0, 0, 1 }, VK_F
    VK_g,            { 0, 0, 0, 1 }, VK_G
    VK_h,            { 0, 0, 0, 1 }, VK_H
    VK_i,            { 0, 0, 0, 1 }, VK_I
    VK_j,            { 0, 0, 0, 1 }, VK_J
    VK_k,            { 0, 0, 0, 1 }, VK_K
    VK_l,            { 0, 0, 0, 1 }, VK_L
    VK_m,            { 0, 0, 0, 1 }, VK_M
    VK_n,            { 0, 0, 0, 1 }, VK_N
    VK_o,            { 0, 0, 0, 1 }, VK_O
    VK_p,            { 0, 0, 0, 1 }, VK_P
    VK_q,            { 0, 0, 0, 1 }, VK_Q
    VK_r,            { 0, 0, 0, 1 }, VK_R
    VK_s,            { 0, 0, 0, 1 }, VK_S
    VK_t,            { 0, 0, 0, 1 }, VK_T
    VK_u,            { 0, 0, 0, 1 }, VK_U
    VK_v,            { 0, 0, 0, 1 }, VK_V
    VK_w,            { 0, 0, 0, 1 }, VK_W
    VK_x,            { 0, 0, 0, 1 }, VK_X
    VK_y,            { 0, 0, 0, 1 }, VK_Y
    VK_z,            { 0, 0, 0, 1 }, VK_Z

    // SHIFT "A".."Z" = "a".."z"
    VK_A,            { 0, 0, 0, 1 }, VK_a
    VK_B,            { 0, 0, 0, 1 }, VK_b
    VK_C,            { 0, 0, 0, 1 }, VK_c
    VK_D,            { 0, 0, 0, 1 }, VK_d
    VK_E,            { 0, 0, 0, 1 }, VK_e
    VK_F,            { 0, 0, 0, 1 }, VK_f
    VK_G,            { 0, 0, 0, 1 }, VK_g
    VK_H,            { 0, 0, 0, 1 }, VK_h
    VK_I,            { 0, 0, 0, 1 }, VK_i
    VK_J,            { 0, 0, 0, 1 }, VK_j
    VK_K,            { 0, 0, 0, 1 }, VK_k
    VK_L,            { 0, 0, 0, 1 }, VK_l
    VK_M,            { 0, 0, 0, 1 }, VK_m
    VK_N,            { 0, 0, 0, 1 }, VK_n
    VK_O,            { 0, 0, 0, 1 }, VK_o
    VK_P,            { 0, 0, 0, 1 }, VK_p
    VK_Q,            { 0, 0, 0, 1 }, VK_q
    VK_R,            { 0, 0, 0, 1 }, VK_r
    VK_S,            { 0, 0, 0, 1 }, VK_s
    VK_T,            { 0, 0, 0, 1 }, VK_t
    VK_U,            { 0, 0, 0, 1 }, VK_u
    VK_V,            { 0, 0, 0, 1 }, VK_v
    VK_W,            { 0, 0, 0, 1 }, VK_w
    VK_X,            { 0, 0, 0, 1 }, VK_x
    VK_Y,            { 0, 0, 0, 1 }, VK_y
    VK_Z,            { 0, 0, 0, 1 }, VK_z
  }

  // deadkeys
  deadkeys=
  {
  }

  // deadkeys translation
  deadkeystranslation=
  {
  }

  // extended joy scancodes (0xE2..)
  extendjoy=
  {
    0x40, VK_JOY1LEFT
    0x41, VK_JOY1RIGHT
    0x42, VK_JOY1UP
    0x43, VK_JOY1DOWN
    0x44, VK_JOY1START
    0x45, VK_JOY1MODE
    0x46, VK_JOY1A
    0x47, VK_JOY1B
    0x48, VK_JOY1C
    0x49, VK_JOY1X
    0x4A, VK_JOY1Y
    0x4B, VK_JOY1Z
    0x4C, VK_JOY2LEFT
    0x4D, VK_JOY2RIGHT
    0x4E, VK_JOY2UP
    0x4F, VK_JOY2DOWN
    0x50, VK_JOY2START
    0x51, VK_JOY2MODE
    0x52, VK_JOY2A
    0x53, VK_JOY2B
    0x54, VK_JOY2C
    0x55, VK_JOY2X
    0x56, VK_JOY2Y
    0x57, VK_JOY2Z
  }

  // Special Spectrum+ keys
  special=
  {
    // 0x0E, VK_HASH                           // GRAVEACENT -> TRUE VIDEO Dedicated key (CAP.SHIFT + 3) (#)
    // 0x15, VK_LEFTPAREN                      // q -> GRAPH Dedicated key (CAP.SHIFT + 9)( ( )
    // 0x16, VK_DOLLAR                         // 1 -> INV VIDEO Dedicated key (CAP.SHIFT + 4) ($)
    // 0x1C, VK_EXCLAIM                        // a -> EDIT Dedicated key (CAP.SHIFT + 1)(!)

    /*0x0E, VK_p, { 1, 0, 0, 0 }*/
    0x0E, { 0, 0, 0, 1 }, VK_3 
    0x15, { 0, 0, 0, 1 }, VK_9 
    0x16, { 0, 0, 0, 1 }, VK_4
    0x1C, { 0, 0, 0, 1 }, VK_1
  }